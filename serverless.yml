org: khalil1

app: Backend

service: Backend

provider:
  name: aws
  runtime: nodejs20.x
  vpc:
    securityGroupIds:
      - sg-0ed40a5999e1650e0
    subnetIds:
      - subnet-0dbe603c213c8c82d
      - subnet-0bff18fbd7188e54b
      - subnet-03484be23648c333e
      - subnet-0c623cae1caa5f231
      - subnet-0197af1832aebc247
      - subnet-07e8ac42dc572ddcc
  environment:
    DB_HOST: posystemdb.cjeu04uek25d.us-east-1.rds.amazonaws.com
    DB_USER: admin
    DB_PASSWORD: posystem01
    DB_NAME: POSystemdb
    DB_PORT: 3306

package:
  individually: true

functions:
  createUser:
    handler: modules/users/controller.createUser
    events:
      - http:
          path: user
          method: post
  getAllUsers:
    handler:  modules/users/controller.getAllUsers
    events:
      - http:
          path: users
          method: get
  updateUser:
    handler:  modules/users/controller.updateUser
    events:
      - http:
          path: user/{id}
          method: put
  deleteUser:
    handler:  modules/users/controller.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
  getOrders:
    handler:  modules/orders/order.getAllOrdersHandler
    timeout: 30
    events:
      - httpApi:
          path: /orders
          method: get
  getOrderByIdWorker:
    handler:  modules/orders/order.getOrderByIdHandler
    timeout: 30
    events:
      - httpApi:
          path: /orders/{id}
          method: get
  createOrder:
    handler:  modules/orders/order.createOrderHandler
    timeout: 30
    events:
      - httpApi:
          path: /createorders
          method: post


plugins:
  - serverless-offline
  - serverless-esbuild
custom:
  serverless-offline:
    noPrependStageInUrl: true
  esbuild:
    bundle: true
    minify: true  


