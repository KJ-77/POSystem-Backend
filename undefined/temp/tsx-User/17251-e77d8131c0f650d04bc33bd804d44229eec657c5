{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var service_exports={};__export(service_exports,{createCognitoUser:()=>createCognitoUser,createUserservice:()=>createUserservice,deleteUserservice:()=>deleteUserservice,getAllUsersservice:()=>getAllUsersservice,getUserByIdservice:()=>getUserByIdservice,updateUserservice:()=>updateUserservice});module.exports=__toCommonJS(service_exports);var import_db=require(\"../../config/db\");var import_aws_sdk=require(\"aws-sdk\");const cognito=new import_aws_sdk.CognitoIdentityServiceProvider;const generateRandomPassword=__name((length=8)=>{const charset=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+[]{}|;:',.<>?\";let password=\"\";for(let i=0;i<length;i++){const randomIndex=Math.floor(Math.random()*charset.length);password+=charset[randomIndex]}return password},\"generateRandomPassword\");const createCognitoUser=__name(async userDetails=>{const password=generateRandomPassword();const createUserParams={UserPoolId:\"us-east-1_7np4XcTfB\",Username:userDetails.email,UserAttributes:[{Name:\"email\",Value:userDetails.email},{Name:\"name\",Value:userDetails.FULLNAME}],TemporaryPassword:password};try{await cognito.adminCreateUser(createUserParams).promise();const addUserToGroupParams={UserPoolId:\"us-east-1_7np4XcTfB\",Username:userDetails.email,GroupName:userDetails.position};await cognito.adminAddUserToGroup(addUserToGroupParams).promise();const user=await cognito.adminGetUser({UserPoolId:\"us-east-1_7np4XcTfB\",Username:userDetails.email}).promise();const subAttribute=user.UserAttributes?.find(attr=>attr.Name===\"sub\");if(subAttribute){return subAttribute.Value}else{throw new Error(\"User ID not found.\")}}catch(error){console.error(\"Error creating or managing user:\",error);throw error}},\"createCognitoUser\");const createUserservice=__name(async userData=>{let connection;try{connection=await(0,import_db.createConnection)();const[result]=await connection.query(\"INSERT INTO users (ID,FULLNAME, email,position) VALUES (?, ? ,?,?)\",[userData.ID,userData.FULLNAME,userData.email,userData.position]);if(result.affectedRows===0){throw new Error(\"error adding user\")}}catch(error){console.error(\"Error creating user:\",error);throw new Error(\"Failed to create user\")}finally{if(connection){await connection.end()}}},\"createUserservice\");const getAllUsersservice=__name(async()=>{try{const connection=await(0,import_db.createConnection)();const[users]=await connection.execute('SELECT * FROM users WHERE status=\"working\"');return users}catch(error){throw new Error(\"Error executing query\")}},\"getAllUsersservice\");const getUserByIdservice=__name(async id=>{const connection=await(0,import_db.createConnection)();const[user]=await connection.execute(\"SELECT * FROM users WHERE id = ?\",[id]);return user.length>0?user[0]:null},\"getUserByIdservice\");const deleteUserservice=__name(async userId=>{let connection;try{connection=await(0,import_db.createConnection)();const[result]=await connection.execute(\"UPDATE  users SET status ='deleted' WHERE ID =?\",[userId]);if(result.affectedRows===0){throw new Error(\"error adding....\")}}catch(error){console.error(\"Error deleting user:\",error);throw new Error(\"Failed to delete user\")}finally{if(connection){await connection.end()}}},\"deleteUserservice\");const updateUserservice=__name(async(userId,userData)=>{let connection;try{connection=await(0,import_db.createConnection)();const setClause=Object.keys(userData).map(key=>`${key} = ?`).join(\", \");if(setClause.length===0){throw new Error(\"No updates provided\")}const query=`UPDATE users SET ${setClause} WHERE ID = ?`;const values=[...Object.values(userData),userId];await connection.query(query,values);const[result]=await connection.query(query,values);if(result.affectedRows===0){throw new Error(\"error udating....\")}}catch(error){console.error(\"Error updating user:\",error);throw new Error(\"Failed to update user\")}finally{if(connection){await connection.end()}}},\"updateUserservice\");0&&(module.exports={createCognitoUser,createUserservice,deleteUserservice,getAllUsersservice,getUserByIdservice,updateUserservice});\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"ignoreList":[],"sources":["C:\\Users\\User\\Desktop\\backend-PO\\modules\\users\\service.ts"],"sourcesContent":[null]}}