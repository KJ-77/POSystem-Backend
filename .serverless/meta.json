{
  "C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend": {
    "versionSfCore": null,
    "versionFramework": "4.2.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "app": "backend",
      "service": "Backend",
      "provider": {
        "name": "aws",
        "runtime": "nodejs16.x",
        "environment": {
          "DB_HOST": "posystemdb.cjeu04uek25d.us-east-1.rds.amazonaws.com",
          "DB_USER": "admin",
          "DB_PASSWORD": "<REDACTED>",
          "DB_NAME": "POSystemdb",
          "DB_PORT": "3306"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "cognito-idp:AdminCreateUser",
              "cognito-idp:AdminAddUserToGroup",
              "cognito-idp:AdminGetUser",
              "cognito-idp:ListUsers",
              "cognito-idp:AdminListUsers",
              "cognito-idp:AdminUpdateUserAttributes",
              "cognito-idp:AdminDeleteUser"
            ],
            "Resource": "arn:aws:cognito-idp:us-east-1:891377200709:userpool/us-east-1_7np4XcTfB"
          }
        ],
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/Backend/dev/code-artifacts"
      },
      "functions": {
        "createUser": {
          "handler": "modules/users/controller.createUser",
          "events": [
            {
              "http": {
                "path": "/user",
                "method": "post",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-createUser",
          "package": {}
        },
        "getAllUsers": {
          "handler": "modules/users/controller.getAllUsers",
          "events": [
            {
              "http": {
                "path": "/users",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-getAllUsers",
          "package": {}
        },
        "getUserById": {
          "handler": "modules/users/controller.getUserByIdHandler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "path": "/ordersid/{id}",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-getUserById",
          "package": {}
        },
        "updateUser": {
          "handler": "modules/users/controller.updateUser",
          "events": [
            {
              "http": {
                "path": "/userId/{id}",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-updateUser",
          "package": {}
        },
        "deleteUser": {
          "handler": "modules/users/controller.deleteUser",
          "events": [
            {
              "http": {
                "path": "/user/{id}",
                "method": "delete",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-deleteUser",
          "package": {}
        },
        "getOrders": {
          "handler": "modules/orders/order.getAllOrdersHandler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "path": "/orders",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-getOrders",
          "package": {}
        },
        "getOrderByIdWorker": {
          "handler": "modules/orders/order.getOrderByWorkerIdHandler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "path": "/orders/{id}",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-getOrderByIdWorker",
          "package": {}
        },
        "getOrderById": {
          "handler": "modules/orders/order.getOrderByIdHandler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "path": "/ordersid/{id}",
                "method": "get",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-getOrderById",
          "package": {}
        },
        "createOrder": {
          "handler": "modules/orders/order.createOrderHandler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "path": "/createorders/{id}",
                "method": "post",
                "cors": true
              }
            }
          ],
          "name": "Backend-dev-createOrder",
          "package": {}
        },
        "sendemail": {
          "handler": "modules/email/sendemail.hello",
          "events": [
            {
              "http": {
                "path": "/sendEmail",
                "method": "get"
              }
            }
          ],
          "name": "Backend-dev-sendemail",
          "package": {}
        },
        "emailtemplate": {
          "handler": "modules/email/template.handler",
          "events": [
            {
              "http": {
                "path": "/create-template",
                "method": "get"
              }
            }
          ],
          "name": "Backend-dev-emailtemplate",
          "package": {}
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-esbuild"
      ],
      "build": {
        "esbuild": false
      },
      "custom": {
        "serverless-offline": {
          "noPrependStageInUrl": true
        },
        "esbuild": {
          "bundle": true,
          "minify": true
        }
      }
    },
    "serviceRawFile": "app: backend # Make sure this is lowercase\r\n\r\nservice: Backend\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs16.x\r\n  environment:\r\n    DB_HOST: posystemdb.cjeu04uek25d.us-east-1.rds.amazonaws.com\r\n    DB_USER: admin\r\n    DB_PASSWORD: posystem01\r\n    DB_NAME: POSystemdb\r\n    DB_PORT: 3306\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - cognito-idp:AdminCreateUser\r\n        - cognito-idp:AdminAddUserToGroup\r\n        - cognito-idp:AdminGetUser\r\n        - cognito-idp:ListUsers\r\n        - cognito-idp:AdminListUsers\r\n        - cognito-idp:AdminUpdateUserAttributes\r\n        - cognito-idp:AdminDeleteUser\r\n      Resource: arn:aws:cognito-idp:us-east-1:891377200709:userpool/us-east-1_7np4XcTfB\r\n\r\npackage:\r\n  individually: true\r\n\r\nfunctions:\r\n  createUser:\r\n    handler: modules/users/controller.createUser\r\n    events:\r\n      - http:\r\n          path: /user\r\n          method: post\r\n          cors: true\r\n\r\n  getAllUsers:\r\n    handler: modules/users/controller.getAllUsers\r\n    events:\r\n      - http:\r\n          path: /users\r\n          method: get\r\n          cors: true\r\n\r\n  getUserById:\r\n    handler: modules/users/controller.getUserByIdHandler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          path: /ordersid/{id}\r\n          method: get\r\n          cors: true      \r\n\r\n  updateUser:\r\n    handler: modules/users/controller.updateUser\r\n    events:\r\n      - http:\r\n          path: /userId/{id}\r\n          method: get\r\n          cors: true\r\n\r\n  deleteUser:\r\n    handler: modules/users/controller.deleteUser\r\n    events:\r\n      - http:\r\n          path: /user/{id}\r\n          method: delete\r\n          cors: true\r\n\r\n  getOrders:\r\n    handler: modules/orders/order.getAllOrdersHandler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          path: /orders\r\n          method: get\r\n          cors: true\r\n\r\n  getOrderByIdWorker:\r\n    handler: modules/orders/order.getOrderByWorkerIdHandler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          path: /orders/{id}\r\n          method: get\r\n          cors: true\r\n\r\n  getOrderById:\r\n    handler: modules/orders/order.getOrderByIdHandler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          path: /ordersid/{id}\r\n          method: get\r\n          cors: true\r\n\r\n  \r\n\r\n  createOrder:\r\n    handler: modules/orders/order.createOrderHandler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          path: /createorders/{id}\r\n          method: post\r\n          cors: true\r\n  \r\n  sendemail:\r\n    handler: modules/email/sendemail.hello\r\n    events:\r\n      - http:\r\n          path: /sendEmail\r\n          method: get\r\n\r\n  emailtemplate:\r\n    handler: modules/email/template.handler\r\n    events:\r\n      - http:\r\n          path: /create-template\r\n          method: get\r\n\r\n\r\nplugins:\r\n  - serverless-offline\r\n  - serverless-esbuild\r\n\r\nbuild:\r\n  esbuild: false\r\n\r\ncustom:\r\n  serverless-offline:\r\n    noPrependStageInUrl: true\r\n  esbuild:\r\n    bundle: true\r\n    minify: true\r\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "New route /ordersid/{id} conflicts with existing /ordersid/{id}",
      "stack": "AssertError: New route /ordersid/{id} conflicts with existing /ordersid/{id}\n    at internals.Segment.add (C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend\\node_modules\\@hapi\\call\\lib\\segment.js:98:18)\n    at internals.Segment.add (C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend\\node_modules\\@hapi\\call\\lib\\segment.js:60:44)\n    at internals.Router.add (C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\Zayna\\OneDrive\\Desktop\\zero&one\\POSystem-Backend\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at HttpServer.createRoutes (file:///C:/Users/Zayna/OneDrive/Desktop/zero&one/POSystem-Backend/node_modules/serverless-offline/src/events/http/HttpServer.js:1121:18)\n    at #createEvent (file:///C:/Users/Zayna/OneDrive/Desktop/zero&one/POSystem-Backend/node_modules/serverless-offline/src/events/http/Http.js:41:22)\n    at file:///C:/Users/Zayna/OneDrive/Desktop/zero&one/POSystem-Backend/node_modules/serverless-offline/src/events/http/Http.js:46:24\n    at Array.forEach (<anonymous>)\n    at Http.create (file:///C:/Users/Zayna/OneDrive/Desktop/zero&one/POSystem-Backend/node_modules/serverless-offline/src/events/http/Http.js:45:12)"
    },
    "params": {},
    "machineId": "839d2ad312945f1b845dcdc286912a74",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "ff78214d-0491-4834-9c76-2df4b6be09fc",
    "orgName": "zeroandone01",
    "userId": "7kffnm848zSFyHfkns",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "zeroandone01",
    "subscription": null,
    "userEmail": "zaynab-wehbe@hotmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "891377200709",
    "projectType": "framework",
    "versionSf": "4.2.4",
    "serviceProviderAwsCfStackName": "Backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:891377200709:stack/Backend-dev/ec4d6b60-67ab-11ef-9021-123bc1b8cb13",
    "serviceProviderAwsCfStackCreated": "2024-08-31T15:15:57.392Z",
    "serviceProviderAwsCfStackUpdated": "2024-09-04T06:52:48.652Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-createOrder:21",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CreateOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-deleteUser:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-DeleteUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetOrderByIdWorkerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-getOrderByIdWorker:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-GetOrderByIdWorkerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllUsersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-getAllUsers:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-GetAllUsersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetOrdersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-getOrders:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-GetOrdersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-updateUser:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-UpdateUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377200709:function:Backend-dev-createUser:34",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Backend-dev-CreateUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://n1458hy4ek.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-Backend-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "backend-dev-serverlessdeploymentbucket-zecwkbvtuitg",
        "ExportName": "sls-Backend-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}